[build-system]
requires = ["wheel", "setuptools>=61.2", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "aehmc"
authors = [
    {name = "Aesara developers", email = "aesara.devs@gmail.com"}
]
description="HMC samplers in Aesara"
readme = "README.md"
license = {text = "MIT License"}
dynamic = ["version"]
requires-python = ">=3.8"
dependencies = [
    "numpy >= 1.18.1",
    "scipy >= 1.4.0",
    "aesara >= 2.8.11",
    "aeppl >= 0.1.4",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
keywords = [
    "aesara",
    "math",
    "symbolic",
    "hamiltonian monte carlo",
    "nuts sampler",
    "No U-turn sampler",
    "symplectic integration",
]

[project.urls]
source = "http://github.com/aesara-devs/aehmc"
tracker = "http://github.com/aesara-devs/aehmc/issues"

[tool.setuptools]
packages = ["aehmc"]
include-package-data = false

[tool.setuptools_scm]
write_to = "aehmc/_version.py"

[tool.pydocstyle]
# Ignore errors for missing docstrings.
# Ignore D202 (No blank lines allowed after function docstring)
# due to bug in black: https://github.com/ambv/black/issues/355
add-ignore = "D100,D101,D102,D103,D104,D105,D106,D107,D202"
convention = "numpy"

[tool.pytest.ini_options]
python_files = ["test*.py"]
testpaths = ["tests"]
filterwarnings = [
    "error:::aesara",
    "error:::aeppl",
    "error:::aemcmc",
    "ignore:::xarray",
]

[tool.coverage.run]
omit = [
    "aehmc/_version.py",
    "tests/*",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise TypeError",
    "return NotImplemented",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "assert False",
]
show_missing = true

[tool.isort]
profile = "black"

[tool.pylint]
max-line-length = "88"

[tool."pylint.messages_control"]
disable = "C0330, C0326"

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["tests.*"]
ignore_errors = true
check_untyped_defs = false

[tool.black]
line-length = 88
